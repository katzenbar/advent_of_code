defmodule ExAdvent.Y2020.Day20Test do
  use ExUnit.Case

  import ExAdvent.Y2020.Day20

  test "multiply_corner_ids" do
    tiles = parse_input(example_input())

    assert multiply_corner_ids(tiles) == 20_899_048_083_289
  end

  test "replace_sea_monster?" do
    lines = ['.#.#...#.###...#.##.##..', '#.#.##.###.#.##.##.#####', '..##.###.####..#.####.##']

    assert replace_sea_monster(lines, {2, 0}) == [
             '.#.#...#.###...#.##.O#..',
             '#.O.##.OO#.#.OO.##.OOO##',
             '..#O.#O#.O##O..O.#O##.##'
           ]
  end

  test "has_sea_monster? - true" do
    lines = ['.#.#...#.###...#.##.##..', '#.#.##.###.#.##.##.#####', '..##.###.####..#.####.##']
    assert has_sea_monster?(lines, {2, 0}) == true
  end

  test "has_sea_monster? - false" do
    lines = ['.#.#...#.###...#.##.##..', '#.#.##.###.#.##.##.#####', '..##.###.####..#.####.##']
    assert has_sea_monster?(lines, {1, 0}) == false
  end

  test "replace_sea_monsters" do
    image = [
      '.####...#####..#...###..',
      '#####..#..#.#.####..#.#.',
      '.#.#...#.###...#.##.##..',
      '#.#.##.###.#.##.##.#####',
      '..##.###.####..#.####.##',
      '...#.#..##.##...#..#..##',
      '#.##.#..#.#..#..##.#.#..',
      '.###.##.....#...###.#...',
      '#.####.#.#....##.#..#.#.',
      '##...#..#....#..#...####',
      '..#.##...###..#.#####..#',
      '....#.##.#.#####....#...',
      '..##.##.###.....#.##..#.',
      '#...#...###..####....##.',
      '.#.##...#.##.#.#.###...#',
      '#.###.#..####...##..#...',
      '#.###...#.##...#.######.',
      '.###.###.#######..#####.',
      '..##.#..#..#.#######.###',
      '#.#..##.########..#..##.',
      '#.#####..#.#...##..#....',
      '#....##..#.#########..##',
      '#...#.....#..##...###.##',
      '#..###....##.#...##.##.#'
    ]

    expected = [
      '.####...#####..#...###..',
      '#####..#..#.#.####..#.#.',
      '.#.#...#.###...#.##.O#..',
      '#.O.##.OO#.#.OO.##.OOO##',
      '..#O.#O#.O##O..O.#O##.##',
      '...#.#..##.##...#..#..##',
      '#.##.#..#.#..#..##.#.#..',
      '.###.##.....#...###.#...',
      '#.####.#.#....##.#..#.#.',
      '##...#..#....#..#...####',
      '..#.##...###..#.#####..#',
      '....#.##.#.#####....#...',
      '..##.##.###.....#.##..#.',
      '#...#...###..####....##.',
      '.#.##...#.##.#.#.###...#',
      '#.###.#..####...##..#...',
      '#.###...#.##...#.##O###.',
      '.O##.#OO.###OO##..OOO##.',
      '..O#.O..O..O.#O##O##.###',
      '#.#..##.########..#..##.',
      '#.#####..#.#...##..#....',
      '#....##..#.#########..##',
      '#...#.....#..##...###.##',
      '#..###....##.#...##.##.#'
    ]

    assert replace_sea_monsters(image) == expected
  end

  test "build_image" do
    tiles = parse_input(example_input())

    assert build_image(tiles) == [
             '.####...#####..#...###..',
             '#####..#..#.#.####..#.#.',
             '.#.#...#.###...#.##.##..',
             '#.#.##.###.#.##.##.#####',
             '..##.###.####..#.####.##',
             '...#.#..##.##...#..#..##',
             '#.##.#..#.#..#..##.#.#..',
             '.###.##.....#...###.#...',
             '#.####.#.#....##.#..#.#.',
             '##...#..#....#..#...####',
             '..#.##...###..#.#####..#',
             '....#.##.#.#####....#...',
             '..##.##.###.....#.##..#.',
             '#...#...###..####....##.',
             '.#.##...#.##.#.#.###...#',
             '#.###.#..####...##..#...',
             '#.###...#.##...#.######.',
             '.###.###.#######..#####.',
             '..##.#..#..#.#######.###',
             '#.#..##.########..#..##.',
             '#.#####..#.#...##..#....',
             '#....##..#.#########..##',
             '#...#.....#..##...###.##',
             '#..###....##.#...##.##.#'
           ]
  end

  test "place_tiles" do
    tiles = parse_input(example_input())

    assert place_tiles(tiles) == %{
             {0, 0} =>
               {1951,
                [
                  '#..#..#.##',
                  '..####....',
                  '.#####..##',
                  '..#.#...##',
                  '##.#.##.#.',
                  '#..##.###.',
                  '....#.#...',
                  '##.##.#..#',
                  '..###.##.#',
                  '.#..#####.'
                ]},
             {0, 1} =>
               {2311,
                [
                  '.#..#####.',
                  '.#.####.#.',
                  '###...#..#',
                  '#..#.##..#',
                  '#....#.##.',
                  '...##.##.#',
                  '.#...#....',
                  '#.#.##....',
                  '##.###.#.#',
                  '#..##.#...'
                ]},
             {0, 2} =>
               {3079,
                [
                  '#..##.#...',
                  '.#.###....',
                  '#.###.####',
                  '...##.#...',
                  '##.#..##.#',
                  '##.#####.#',
                  '##....##.#',
                  '##...#....',
                  '##..###...',
                  '.#....#...'
                ]},
             {1, 0} =>
               {2729,
                [
                  '####....#.',
                  '.#####..#.',
                  '#..#.#.##.',
                  '#.###...##',
                  '.##.#.##..',
                  '..####..##',
                  '.##.##....',
                  '##.#..#..#',
                  '#....#....',
                  '......#..#'
                ]},
             {1, 1} =>
               {1427,
                [
                  '......#..#',
                  '..#....###',
                  '##....#..#',
                  '#.###..#..',
                  '..#.######',
                  '####.....#',
                  '.###..###.',
                  '.#.##.#.##',
                  '#.####....',
                  '.#.#.###..'
                ]},
             {1, 2} =>
               {2473,
                [
                  '.#.#.###..',
                  '.#.##...##',
                  '#.########',
                  '.#..#.###.',
                  '#########.',
                  '#.#.#...#.',
                  '#.#.######',
                  '...#..##.#',
                  '...##.#..#',
                  '.####....#'
                ]},
             {2, 0} =>
               {2971,
                [
                  '...#..###.',
                  '....###...',
                  '.##..#.#.#',
                  '#.##.##...',
                  '.##.######',
                  '#.####.##.',
                  '.#..#..##.',
                  '###.#.#...',
                  '.###.#....',
                  '#.#.##...#'
                ]},
             {2, 1} =>
               {1489,
                [
                  '#.#.##...#',
                  '#.#..#.#.#',
                  '##...####.',
                  '.#####..##',
                  '#....#....',
                  '##.##..#.#',
                  '.#....##..',
                  '#.###...#.',
                  '.##..#....',
                  '.#..#.....'
                ]},
             {2, 2} =>
               {1171,
                [
                  '.#..#.....',
                  '#.######..',
                  '#..#####..',
                  '.####.####',
                  '...#..##.#',
                  '.#..#.....',
                  '#####..##.',
                  '#..###.##.',
                  '#.##.##.#.',
                  '###....##.'
                ]}
           }
  end

  test "get_border - :top" do
    assert get_border(example_tile(), :top) == '..##.#..#.'
  end

  test "get_border - :bottom" do
    assert get_border(example_tile(), :bottom) == '..###..###'
  end

  test "get_border - :left" do
    assert get_border(example_tile(), :left) == '.#####..#.'
  end

  test "get_border - :right" do
    assert get_border(example_tile(), :right) == '...#.##..#'
  end

  test "rotate_grid - 1" do
    grid = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    assert rotate_grid(grid, 1) == [[7, 4, 1], [8, 5, 2], [9, 6, 3]]
  end

  def example_tile do
    [
      '..##.#..#.',
      '##..#.....',
      '#...##..#.',
      '####.#...#',
      '##.##.###.',
      '##...#.###',
      '.#.#.#..##',
      '..#....#..',
      '###...#.#.',
      '..###..###'
    ]
  end

  test "parse input" do
    assert parse_input(example_input()) == [
             {2311,
              [
                '..##.#..#.',
                '##..#.....',
                '#...##..#.',
                '####.#...#',
                '##.##.###.',
                '##...#.###',
                '.#.#.#..##',
                '..#....#..',
                '###...#.#.',
                '..###..###'
              ]},
             {1951,
              [
                '#.##...##.',
                '#.####...#',
                '.....#..##',
                '#...######',
                '.##.#....#',
                '.###.#####',
                '###.##.##.',
                '.###....#.',
                '..#.#..#.#',
                '#...##.#..'
              ]},
             {1171,
              [
                '####...##.',
                '#..##.#..#',
                '##.#..#.#.',
                '.###.####.',
                '..###.####',
                '.##....##.',
                '.#...####.',
                '#.##.####.',
                '####..#...',
                '.....##...'
              ]},
             {1427,
              [
                '###.##.#..',
                '.#..#.##..',
                '.#.##.#..#',
                '#.#.#.##.#',
                '....#...##',
                '...##..##.',
                '...#.#####',
                '.#.####.#.',
                '..#..###.#',
                '..##.#..#.'
              ]},
             {1489,
              [
                '##.#.#....',
                '..##...#..',
                '.##..##...',
                '..#...#...',
                '#####...#.',
                '#..#.#.#.#',
                '...#.#.#..',
                '##.#...##.',
                '..##.##.##',
                '###.##.#..'
              ]},
             {2473,
              [
                '#....####.',
                '#..#.##...',
                '#.##..#...',
                '######.#.#',
                '.#...#.#.#',
                '.#########',
                '.###.#..#.',
                '########.#',
                '##...##.#.',
                '..###.#.#.'
              ]},
             {2971,
              [
                '..#.#....#',
                '#...###...',
                '#.#.###...',
                '##.##..#..',
                '.#####..##',
                '.#..####.#',
                '#..#.#..#.',
                '..####.###',
                '..#.#.###.',
                '...#.#.#.#'
              ]},
             {2729,
              [
                '...#.#.#.#',
                '####.#....',
                '..#.#.....',
                '....#..#.#',
                '.##..##.#.',
                '.#.####...',
                '####.#.#..',
                '##.####...',
                '##..#.##..',
                '#.##...##.'
              ]},
             {3079,
              [
                '#.#.#####.',
                '.#..######',
                '..#.......',
                '######....',
                '####.#..#.',
                '.#...#.##.',
                '#.#####.##',
                '..#.###...',
                '..#.......',
                '..#.###...'
              ]}
           ]
  end

  def example_input do
    ~s"""
    Tile 2311:
    ..##.#..#.
    ##..#.....
    #...##..#.
    ####.#...#
    ##.##.###.
    ##...#.###
    .#.#.#..##
    ..#....#..
    ###...#.#.
    ..###..###

    Tile 1951:
    #.##...##.
    #.####...#
    .....#..##
    #...######
    .##.#....#
    .###.#####
    ###.##.##.
    .###....#.
    ..#.#..#.#
    #...##.#..

    Tile 1171:
    ####...##.
    #..##.#..#
    ##.#..#.#.
    .###.####.
    ..###.####
    .##....##.
    .#...####.
    #.##.####.
    ####..#...
    .....##...

    Tile 1427:
    ###.##.#..
    .#..#.##..
    .#.##.#..#
    #.#.#.##.#
    ....#...##
    ...##..##.
    ...#.#####
    .#.####.#.
    ..#..###.#
    ..##.#..#.

    Tile 1489:
    ##.#.#....
    ..##...#..
    .##..##...
    ..#...#...
    #####...#.
    #..#.#.#.#
    ...#.#.#..
    ##.#...##.
    ..##.##.##
    ###.##.#..

    Tile 2473:
    #....####.
    #..#.##...
    #.##..#...
    ######.#.#
    .#...#.#.#
    .#########
    .###.#..#.
    ########.#
    ##...##.#.
    ..###.#.#.

    Tile 2971:
    ..#.#....#
    #...###...
    #.#.###...
    ##.##..#..
    .#####..##
    .#..####.#
    #..#.#..#.
    ..####.###
    ..#.#.###.
    ...#.#.#.#

    Tile 2729:
    ...#.#.#.#
    ####.#....
    ..#.#.....
    ....#..#.#
    .##..##.#.
    .#.####...
    ####.#.#..
    ##.####...
    ##..#.##..
    #.##...##.

    Tile 3079:
    #.#.#####.
    .#..######
    ..#.......
    ######....
    ####.#..#.
    .#...#.##.
    #.#####.##
    ..#.###...
    ..#.......
    ..#.###...
    """
  end
end
